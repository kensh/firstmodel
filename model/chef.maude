load ./compile.maude

mod CHEF is
 pr VIRTUAL .
 pr REAL .
 sort Chef .
 sorts Var Sys .
 subsort Var < Sys .
 subsorts Virtual Real < Var .

 op  _ _ : Sys Sys -> Sys [assoc comm] .
 ops msv msr : Bag{Machine} -> Var .
 op  cs : Bag{Connection} -> Var .

 vars CSV CSR RECIPE : Bag{Connection} .
 vars MSV MSR MS : Bag{Machine} .
 vars M X Y : Machine .
 var  C : Pair{Machine, Machine} .

 rl  [ops_prv] : real(MSR, CSR) msr(M MS) => real(M MSR, CSR) msr(MS) .
 rl  [ops_add] : virt(MSV, CSV) msv(M MS) => virt(M MSV, CSV) msv(MS) .
 crl [ops_set] : virt(MSV, CSV) cs(C RECIPE) => virt(MSV, C CSV) cs(C RECIPE) 
                  if occurrences(C, CSV) == 0 .
 crl [config+] : virt(MSV, [X, Y] CSV) real(X Y MSR, CSR)
               => virt(MSV, [X, Y] CSV) real(X Y MSR, [X, Y] CSR)
                  if occurrences([X, Y], CSR) == 0 .
 crl [config-] : virt(MSV, CSV) real(MSR, C CSR)
               => virt(MSV, CSV) real(MSR, CSR)
                  if occurrences(C, CSV) == 0 .

endm
