load ./compile.maude

mod MODEL is
 pr SCRIPT .
 pr CLOUD .
 sort Model .
 sorts Var Sys .
 subsort Var < Sys .
 subsorts Script Cloud < Var .

 op  _ _ : Sys Sys -> Sys [assoc comm] .
 ops vm-script vm-cloud : Bag{Machine} -> Var .
 op  design : Bag{Connection} -> Var .

 vars SCRIPT-CON CLOUD-CON DESIGN-CON : Bag{Connection} .
 vars SCRIPT-VM CLOUD-VM MS : Bag{Machine} .
 vars M X Y : Machine .
 var  C : Pair{Machine, Machine} .

 rl  [cloud_vm] : cloud(CLOUD-VM, CLOUD-CON) vm-cloud(M MS) => cloud(M CLOUD-VM, CLOUD-CON) vm-cloud(MS) .
 rl  [script_vm] : script(SCRIPT-VM, SCRIPT-CON) vm-script(M MS) => script(M SCRIPT-VM, SCRIPT-CON) vm-script(MS) .
 crl [script_con] : script(SCRIPT-VM, SCRIPT-CON) design(C DESIGN-CON) => script(SCRIPT-VM, C SCRIPT-CON) design(C DESIGN-CON) 
                  if occurrences(C, SCRIPT-CON) == 0 .
 crl [config++] : script(SCRIPT-VM, [X, Y] SCRIPT-CON) cloud(X Y CLOUD-VM, CLOUD-CON)
              => script(SCRIPT-VM, [X, Y] SCRIPT-CON) cloud(X Y CLOUD-VM, [X, Y] CLOUD-CON)
                  if occurrences([X, Y], CLOUD-CON) == 0 .
 crl [config--] : script(SCRIPT-VM, SCRIPT-CON) cloud(CLOUD-VM, C CLOUD-CON)
              => script(SCRIPT-VM, SCRIPT-CON) cloud(CLOUD-VM, CLOUD-CON)
                  if occurrences(C, SCRIPT-CON) == 0 .

endm
