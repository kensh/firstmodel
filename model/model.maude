load ./compile.maude

mod MODEL is
 pr SCRIPT .
 pr CLOUD .
 sort Model .
 sorts Var Sys .
 subsort Var < Sys .
 subsorts Script Cloud < Var .

 op  _ _ : Sys Sys -> Sys [assoc comm] .

 vars CONS1 CONS2 : Bag{Connection} .
 vars VMS1 VMS2 : Bag{Machine} .
 vars M X Y : Machine .
 var  C : Pair{Machine, Machine} .
 var  s : Sys .

 crl [mk_vm] : cloud(VMS1, CONS1) script(M VMS2, CONS2) => cloud(M VMS1, CONS1) script(M VMS2, CONS2) 
                  if occurrences(M, VMS1) == 0 .

 crl [rm_vm] : cloud(M VMS1, CONS1) script(VMS2, CONS2) => cloud(VMS1, CONS1) script(VMS2, CONS2) 
                  if occurrences(M, VMS2) == 0 .

 crl [mk_con] : cloud(X Y VMS1, CONS1) script(VMS2, [X, Y] CONS2) => cloud(X Y VMS1, [X, Y] CONS1) script(VMS2, [X, Y] CONS2) 
                  if occurrences([X, Y], CONS1) == 0 .

 crl [rm_con] : cloud(VMS1, C CONS1) script(VMS2, CONS2) => cloud(VMS1, CONS1) script(VMS2, CONS2) 
                  if occurrences(C, CONS2) == 0 .

 rl [stable] : s => s . 



endm
