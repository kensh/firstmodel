load ./compile.maude


mod VIRTUAL is
 pr CONNECTIONS .
 pr MACHINES .
 sort Virtual .
 
 op con__ : Machine Machine -> Pair{Machine, Machine} .
 
endm


mod REAL is
 pr CONNECTIONS .
 pr MACHINES .
 sort Real . 
 
 op r : Bag{Machine} Bag{Connection} -> Real [ctor] .
 op add : Machine Real -> Real .
 op con : Machine Machine Real -> Real .

 vars X Y : Machine .
 var R : Real .
 var M : Bag{Machine} .
 var C : Bag{Connection} .

 eq add(X, r(M,C)) = r(X M, C) .  
 eq con(X,Y, r(M,C)) = r(M, [X,Y] C) .

endm


mod CHEF is
 pr VIRTUAL .
 pr REAL .
 pr NAT .
 sort Chef .
 subsorts Chef < Real Virtual . 

 op c : Real -> Chef [ctor] .
 op test : Nat -> Nat .

 var X : Nat .
 eq test(X) = 10 .
 
*** rl [dq2] : (pc[I]: ds) (queue: Q) (tmp[I]: R) => (pc[I]: rs) (queue: R) (tmp[I]: R) . 
endm

select CHEF .

red c(r(db(1) ap(1), mt)).

red [db(1),ap(3)] .
red add(db(1) , r(ap(1) ap(2), [ap(1),ap(2)])) .
red con(db(1),ap(1), r(db(1) ap(1), mt)) .

select CHEF .
red test(19) .

quit
